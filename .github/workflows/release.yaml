name: Release

on:
  release:
    types: [ created ]
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/release.yaml"
      
jobs:
  publish-images:
    if: startsWith(github.ref, 'refs/tags/v') == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: sigstore/cosign-installer@main
      
      - name: Get Docker tags
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            calyptia/core-docker-desktop
            ghcr.io/calyptia/core-docker-desktop
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=calyptia
            org.opencontainers.image.description=Manage your Calyptia Core instances running on docker-desktop.
            org.opencontainers.image.licenses="/licenses/calyptia.txt"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      
      - name: Images digests
        run: echo ${{ steps.docker_build.outputs.digest }}
      
      - name: Sign Container Image
        continue-on-error: true
        run: |
          COSIGN_EXPERIMENTAL=1 cosign sign --force calyptia/core-docker-desktop@${{ steps.docker_build.outputs.digest }}
